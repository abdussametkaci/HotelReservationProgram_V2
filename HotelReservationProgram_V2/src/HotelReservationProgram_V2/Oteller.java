/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HotelReservationProgram_V2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abdussamet
 */
public class Oteller extends javax.swing.JFrame {

    /**
     * Creates new form Oteller
     */
    ArrayList<String> oteller = new ArrayList();
    DefaultComboBoxModel dcm = new DefaultComboBoxModel();
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultListModel dlm = new DefaultListModel();
    String tarih = "";
    Connection conn;
    int gun = 0;
    public Oteller() {
        initComponents();
    }
    
    public Oteller(ArrayList<String> oteller, String tarih, int gecesayisi){
        initComponents();
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
        } catch (SQLException ex) {
            Logger.getLogger(Oteller.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.oteller = oteller;
        for(String s : oteller){
            dcm.addElement(""+s);
        }
        jComboBoxOteller.setModel(dcm);
        
        this.tarih = tarih;
        this.gun = gecesayisi;
        
        dtm.setColumnIdentifiers(new String[]{"Oda No", "Oda Tipi", "Durumu", "Rezervli Tarihi"});
        jTableOdalar.setModel(dtm);
        
        jListHizmetler.setModel(dlm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxOteller = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOdalar = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListHizmetler = new javax.swing.JList<>();
        jButtonRezerveEt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Oteller:");

        jComboBoxOteller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOtellerActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Odalar");

        jTableOdalar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableOdalar);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Hizmetler");

        jScrollPane2.setViewportView(jListHizmetler);

        jButtonRezerveEt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonRezerveEt.setText("Rezerve Et");
        jButtonRezerveEt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRezerveEtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(jComboBoxOteller, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRezerveEt)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxOteller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonRezerveEt))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRezerveEtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRezerveEtActionPerformed
        if(jTableOdalar.getSelectedRow() == -1){
            return;
        }
        
        if(dtm.getValueAt(jTableOdalar.getSelectedRow(), 2).equals("Boş")){
            String[] secimler = {"Evet", "Hayır"};
            int secim = JOptionPane.showOptionDialog(this, 
                    "Rezervasyon almak istediğinizden emin misiniz?",
                    "Hey!", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE, 
                    null,
                    secimler,
                    secimler[0]);
            
            if(secim == 0){
                int hizmetSayisi = 0;
                String hizmetler = "";
                for(String s : jListHizmetler.getSelectedValuesList()){
                    hizmetler += s + ", ";
                    hizmetSayisi++;
                }
                hizmetler = hizmetler.substring(0, hizmetler.length() - 2);
                
                int fatura = 0;
                fatura = hizmetSayisi * 100 + gun * 200 ;
                
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
                EntityManager em = emf.createEntityManager();
                Query q = em.createQuery("SELECT m FROM Musteri m");
                List<Musteri> musteriler = q.getResultList();
                em.getTransaction().begin();
                for(Musteri m : musteriler){
                    if(m.getTc().equals(AnaSayfa.sistemdekiKişi.getTc())){
                        m.setOtel((String) jComboBoxOteller.getSelectedItem());
                        m.setOda((Integer)jTableOdalar.getValueAt(jTableOdalar.getSelectedRow(), 0));
                        m.setAldigihizmetler(hizmetler);
                        m.setFatura(fatura);
                        em.persist(m);
                        em.getTransaction().commit();
                        em.close();
                        emf.close();
                        break;
                    }
                }
                
                try {
                    Statement s = conn.createStatement();
                    String sql = "SELECT * FROM Oda";
                    ResultSet rs = s.executeQuery(sql);
                    while(rs.next()){
                        if(((String)jComboBoxOteller.getSelectedItem()).equals(rs.getString("oteladi")) && ((Integer)jTableOdalar.getValueAt(jTableOdalar.getSelectedRow(), 0)) == rs.getInt("odano")){
                            s.executeUpdate("UPDATE Oda SET durum = 1"+", tarih = '" + tarih + "'" + ", musteritc = '" + AnaSayfa.sistemdekiKişi.getTc() + "'" + " WHERE odano = " + rs.getInt("odano") + " AND oteladi = '" + rs.getString("oteladi") + "'");
                            break;
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Oteller.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        } else {
            JOptionPane.showMessageDialog(this, "Dolu odayı rezerve edemezsiniz!\nLütfen başka bir oda seçiniz!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
            return;
        }
                
    }//GEN-LAST:event_jButtonRezerveEtActionPerformed

    private void jComboBoxOtellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOtellerActionPerformed
        dtm.setRowCount(0);
        dlm.setSize(0);
        String otelAdi = (String)jComboBoxOteller.getSelectedItem();
        try {
            Statement s = conn.createStatement();
            String sql = "SELECT * FROM Oda";
            ResultSet rs = s.executeQuery(sql);
            while(rs.next()){
                if(otelAdi.equals(rs.getString("oteladi"))){
                    String durum = "";
                    if(rs.getInt("durum") == 0){
                        durum = "Boş";
                    } else {
                        durum = "Dolu";
                    }
                    dtm.addRow(new Object[]{rs.getInt("odano"), rs.getString("odatipi"), durum, rs.getString("tarih")});
                }
            }
            Statement s2 = conn.createStatement();
            String sql2 = "SELECT * FROM Hizmet";
            ResultSet rs2 = s2.executeQuery(sql2);
            while(rs2.next()){
                if(otelAdi.equals(rs2.getString("oteladi"))){
                    String hizmet = rs2.getString("hizmetler");
                    String[] hizmetler = hizmet.split(", ");
                    for (String s1 : hizmetler) {
                        dlm.addElement(s1);
                    }
                    break;
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Oteller.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBoxOtellerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oteller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oteller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oteller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oteller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Oteller().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRezerveEt;
    private javax.swing.JComboBox<String> jComboBoxOteller;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListHizmetler;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableOdalar;
    // End of variables declaration//GEN-END:variables
}
