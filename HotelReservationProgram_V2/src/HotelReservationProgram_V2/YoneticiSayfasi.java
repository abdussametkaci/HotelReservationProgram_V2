/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HotelReservationProgram_V2;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abdussamet
 */
public class YoneticiSayfasi extends javax.swing.JFrame {

    /**
     * Creates new form YoneticiSayfasi
     */
    DefaultComboBoxModel dcm = new DefaultComboBoxModel();
    DefaultComboBoxModel dcm2 = new DefaultComboBoxModel();
    DefaultComboBoxModel dcm3 = new DefaultComboBoxModel();
    DefaultComboBoxModel dcmDosyaTuru = new DefaultComboBoxModel();
    DefaultComboBoxModel dcmDosyaTuruM = new DefaultComboBoxModel();
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultTableModel dtm2 = new DefaultTableModel();
    DefaultListModel dlm = new DefaultListModel();
    DefaultListModel dlm2 = new DefaultListModel();
    Connection conn;

    public YoneticiSayfasi() {
        initComponents();
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
            Statement s = conn.createStatement();
            String sql = "SELECT * FROM Otel";
            ResultSet rs = s.executeQuery(sql);
            while (rs.next()) {
                dcm.addElement(rs.getString("ad"));
                dcm3.addElement(rs.getString("ad"));
            }
            jComboBoxOteller.setModel(dcm);
            jComboBoxOtellerM.setModel(dcm3);

            dcm2.addElement("Tek Yataklı");
            dcm2.addElement("Çift Yataklı");
            jComboBoxOdaTipi.setModel(dcm2);

            dcmDosyaTuru.addElement(".txt");
            dcmDosyaTuru.addElement(".dat");
            dcmDosyaTuruM.addElement(".txt");
            dcmDosyaTuruM.addElement(".dat");
            jComboBoxDosyaTuru.setModel(dcmDosyaTuru);
            jComboBoxDosyaTuruM.setModel(dcmDosyaTuruM);

            dtm.setColumnIdentifiers(new String[]{"Oda No", "Oda Tipi", "Drumu", "Tarih", "Müşteri"});
            jTableOdalar.setModel(dtm);

            dtm2.setColumnIdentifiers(new String[]{"Ad", "Soyad", "TC", "Email", "Cinsiyet", "Tel", "Yas", "Kullanıcı Adı", "Şifre", "Otel", "Oda No", "Alınan Hizmetler", "Fatura"});
            jTableMusteriler.setModel(dtm2);

            jListHizmetler.setModel(dlm);
            jListHizmetlerM.setModel(dlm2);
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxOteller = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOdalar = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxOdaTipi = new javax.swing.JComboBox<>();
        jButtonEkle = new javax.swing.JButton();
        jButtonSecileniSil = new javax.swing.JButton();
        jButtonSecileniGuncelle = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldOdaNo = new javax.swing.JTextField();
        jTextFieldOtelAd = new javax.swing.JTextField();
        jTextFieldOdaTipi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldOtelHizmeti = new javax.swing.JTextField();
        jButtonHizmetEkle = new javax.swing.JButton();
        jButtonHizmetÇıkar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListHizmetler = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldOtelSehir = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldDosyaAdi = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxDosyaTuru = new javax.swing.JComboBox<>();
        jButtonDosyayaAktarOdalar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMusteriler = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxOtellerM = new javax.swing.JComboBox<>();
        jButtonMusterileriAra = new javax.swing.JButton();
        jButtonSil = new javax.swing.JButton();
        jButtonGuncelle = new javax.swing.JButton();
        jButtonKullanıcılarıAra = new javax.swing.JButton();
        jTextFieldOdaNoM = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListHizmetlerM = new javax.swing.JList<>();
        jButtonAra = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldGeceSayisi = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldTC = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldDosyaAdiM = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxDosyaTuruM = new javax.swing.JComboBox<>();
        jButtonDosyayaAktarMusteri = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Oteller:");

        jComboBoxOteller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOtellerActionPerformed(evt);
            }
        });

        jTableOdalar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableOdalar);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Oda Tipi:");

        jButtonEkle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonEkle.setText("Ekle");
        jButtonEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEkleActionPerformed(evt);
            }
        });

        jButtonSecileniSil.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonSecileniSil.setText("Seçileni Sil");
        jButtonSecileniSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSecileniSilActionPerformed(evt);
            }
        });

        jButtonSecileniGuncelle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonSecileniGuncelle.setText("Seçileni Güncelle");
        jButtonSecileniGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSecileniGuncelleActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Oda No:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Otel Hizmetleri");

        jButtonHizmetEkle.setText("Ekle");
        jButtonHizmetEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHizmetEkleActionPerformed(evt);
            }
        });

        jButtonHizmetÇıkar.setText("Seçileni Çıkar");
        jButtonHizmetÇıkar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHizmetÇıkarActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jListHizmetler);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Ad:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Şehir:");

        jTextFieldOtelSehir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOtelSehirActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Yeni bir oda tipi eklemek için:");

        jLabel14.setText("Dosya Adı:");

        jTextFieldDosyaAdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDosyaAdiActionPerformed(evt);
            }
        });

        jLabel15.setText("Dosya Türü:");

        jButtonDosyayaAktarOdalar.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButtonDosyayaAktarOdalar.setText("Oda Bilgilerini Dosyaya Aktar");
        jButtonDosyayaAktarOdalar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDosyayaAktarOdalarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton1.setText("Dosyaları Görüntüle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSecileniGuncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(626, 731, Short.MAX_VALUE)
                        .addComponent(jButtonSecileniSil))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldOdaNo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(63, 63, 63))
                                    .addComponent(jComboBoxOteller, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxOdaTipi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldOdaTipi, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jTextFieldOtelAd, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(45, 45, 45)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextFieldOtelSehir, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(377, 377, 377)
                                        .addComponent(jButtonEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(36, 36, 36)
                                        .addComponent(jTextFieldDosyaAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxDosyaTuru, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDosyayaAktarOdalar)
                                .addGap(30, 30, 30)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButtonHizmetEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonHizmetÇıkar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextFieldOtelHizmeti, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(365, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldOtelAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldOtelSehir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBoxOteller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxOdaTipi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldOdaTipi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldOdaNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEkle)
                            .addComponent(jButtonSecileniSil)
                            .addComponent(jTextFieldOtelHizmeti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSecileniGuncelle)
                            .addComponent(jButtonHizmetEkle)
                            .addComponent(jButtonHizmetÇıkar))))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDosyayaAktarOdalar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jTextFieldDosyaAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxDosyaTuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Odalar", jPanel1);

        jTableMusteriler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableMusteriler);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Müşteriler");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Oteller:");

        jComboBoxOtellerM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOtellerMActionPerformed(evt);
            }
        });

        jButtonMusterileriAra.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonMusterileriAra.setText("Tüm Müşterileri Ara");
        jButtonMusterileriAra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMusterileriAraActionPerformed(evt);
            }
        });

        jButtonSil.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonSil.setText("Sil");
        jButtonSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSilActionPerformed(evt);
            }
        });

        jButtonGuncelle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonGuncelle.setText("Güncelle");
        jButtonGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuncelleActionPerformed(evt);
            }
        });

        jButtonKullanıcılarıAra.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButtonKullanıcılarıAra.setText("Kullanıcıları Ara");
        jButtonKullanıcılarıAra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKullanıcılarıAraActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setText("Oda No:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel11.setText("Hizmetler:");

        jScrollPane4.setViewportView(jListHizmetlerM);

        jButtonAra.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButtonAra.setText("Ara");
        jButtonAra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAraActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel12.setText("Tarih:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel13.setText("Gece Sayısı:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel16.setText("TC:");

        jLabel17.setText("Dosya Adı:");

        jLabel18.setText("Dosya Türü:");

        jButtonDosyayaAktarMusteri.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButtonDosyayaAktarMusteri.setText("Müşteri Bilgilerini Dosyaya Aktar");
        jButtonDosyayaAktarMusteri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDosyayaAktarMusteriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel16))
                                        .addGap(39, 39, 39)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jComboBoxOtellerM, 0, 111, Short.MAX_VALUE)
                                            .addComponent(jTextFieldTC))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonAra)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButtonMusterileriAra, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jButtonSil, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonGuncelle))
                                                    .addComponent(jButtonKullanıcılarıAra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(5, 5, 5)))
                                        .addGap(58, 58, 58)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldOdaNoM, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(13, 13, 13)
                                .addComponent(jTextFieldGeceSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldDosyaAdiM)
                                    .addComponent(jComboBoxDosyaTuruM, 0, 129, Short.MAX_VALUE))
                                .addGap(35, 35, 35)
                                .addComponent(jButtonDosyayaAktarMusteri)))
                        .addGap(0, 416, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBoxOtellerM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonMusterileriAra)
                        .addComponent(jLabel10)
                        .addComponent(jTextFieldOdaNoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAra))
                    .addComponent(jLabel12))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonKullanıcılarıAra)
                            .addComponent(jLabel11)
                            .addComponent(jTextFieldTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jButtonSil)
                            .addComponent(jButtonGuncelle))
                        .addGap(51, 51, 51))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldGeceSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextFieldDosyaAdiM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jComboBoxDosyaTuruM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButtonDosyayaAktarMusteri, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Müşteriler", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEkleActionPerformed
        try {
            if (!jTextFieldOtelAd.getText().isEmpty() && !jTextFieldOtelSehir.getText().isEmpty()) {
                if (otelVarMi(jTextFieldOtelAd.getText())) {
                    JOptionPane.showMessageDialog(this, "Bu otel zaten var!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                otelEkle(jTextFieldOtelAd.getText(), jTextFieldOtelSehir.getText());
                dcm.addElement(jTextFieldOtelAd.getText());
                return;
            }

            if (!jTextFieldOdaTipi.getText().isEmpty()) {
                if (odaTipiVarMi(jTextFieldOdaTipi.getText())) {
                    JOptionPane.showMessageDialog(this, "Zaten bu oda tipi var!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                odaTipiEkle(jTextFieldOdaTipi.getText());
                return;
            }

            if (!odaNoVarMi((String) jComboBoxOteller.getSelectedItem())) {
                String[] secimler = {"Evet", "Hayır"};
                int secim = JOptionPane.showOptionDialog(this,
                        "Odayı eklemek istediğinizden emin misiniz!",
                        "Dikkat!",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        secimler,
                        secimler[0]);

                if (secim == 0) {
                    String sql = "INSERT INTO Oda (odano, odatipi, durum, oteladi) VALUES (?, ?, ?, ?)";
                    PreparedStatement st = conn.prepareStatement(sql);
                    st.setInt(1, Integer.parseInt(jTextFieldOdaNo.getText()));
                    st.setString(2, (String) jComboBoxOdaTipi.getSelectedItem());
                    st.setInt(3, 0);
                    st.setString(4, (String) jComboBoxOteller.getSelectedItem());
                    st.executeUpdate();
                    temizle();
                    jComboBoxOtellerActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(this, "İşlem iptal edildi!", "Hey!", JOptionPane.INFORMATION_MESSAGE);
                    temizle();
                    return;
                }

            } else {
                JOptionPane.showMessageDialog(this, "Bu otelde bu oda numarasına sahip bir oda var!\nLütfen başka bir oda numarası veriniz!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
                return;
            }

        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEkleActionPerformed

    private void jButtonSecileniSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSecileniSilActionPerformed
        if (jTableOdalar.getSelectedRow() == -1) {
            return;
        }

        try {
            
            if(odaDoluMu((String)jComboBoxOteller.getSelectedItem(), (Integer)jTableOdalar.getValueAt(jTableOdalar.getSelectedRow(), 0))){
                JOptionPane.showMessageDialog(this, "Bu oda dolu!\nÜzgünümki silemezsiniz!", "Hata!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            String[] secimler = {"Evet", "Hayır"};
            int secim = JOptionPane.showOptionDialog(this, "Odayı silmek istediğinizdenemin misiniz!",
                    "Dikkat!",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    secimler,
                    secimler[0]);

            if (secim == 0) {
                Statement s = conn.createStatement();
                String sql = "DELETE FROM Oda WHERE odano = " + jTableOdalar.getValueAt(jTableOdalar.getSelectedRow(), 0) + " AND oteladi = '" + (String) jComboBoxOteller.getSelectedItem() + "'";
                s.executeUpdate(sql);
                jComboBoxOtellerActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "İşlem iptal edildi!", "Dikkat", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSecileniSilActionPerformed

    private void jButtonSecileniGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSecileniGuncelleActionPerformed
        if (jTableOdalar.getSelectedRow() == -1) {
            return;
        }

        try {
            String[] secimler = {"Evet", "Hayır"};
            int secim = JOptionPane.showOptionDialog(this,
                    "Oda bilgilerini değiştirmek istediğinizden emin misiniz?",
                    "Dikkat!",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    secimler,
                    secimler[0]);

            if (secim == 0) {

                if (odaNoVarMi((String) jComboBoxOteller.getSelectedItem())) {
                    JOptionPane.showMessageDialog(this, "Üzgünüm aynı oda numarası zaten var!", "İşlem Başarısız!", JOptionPane.INFORMATION_MESSAGE);
                    temizle();
                    return;
                }

                String sql = "UPDATE Oda SET odano = ?, odatipi = ? WHERE odano = ? AND oteladi = ?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setInt(1, Integer.parseInt(jTextFieldOdaNo.getText()));
                st.setString(2, (String) jComboBoxOdaTipi.getSelectedItem());
                st.setInt(3, (Integer) jTableOdalar.getValueAt(jTableOdalar.getSelectedRow(), 0));
                st.setString(4, (String) jComboBoxOteller.getSelectedItem());
                st.executeUpdate();
                temizle();
                jComboBoxOtellerActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "İşlem iptal edilmiştir!", "Dikkat!", JOptionPane.INFORMATION_MESSAGE);
                temizle();
            }

        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonSecileniGuncelleActionPerformed

    private void jComboBoxOtellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOtellerActionPerformed
        dtm.setRowCount(0);
        dlm.setSize(0);
        try {
            Statement s = conn.createStatement();
            String sql = "SELECT * FROM Oda";
            ResultSet rs = s.executeQuery(sql);
            String otel = (String) jComboBoxOteller.getSelectedItem();
            while (rs.next()) {
                if (otel.equals(rs.getString("oteladi"))) {
                    String durum = "";
                    String musteri = "";
                    String musteritc = rs.getString("musteritc");
                    if (rs.getInt("durum") == 0) {
                        durum = "Boş";
                    } else {
                        durum = "Dolu";
                    }

                    dtm.addRow(new Object[]{rs.getInt("odano"), rs.getString("odatipi"), durum, rs.getString("tarih"), kullaniciAdi(musteritc)});
                }
            }
            String otelAdi = (String) jComboBoxOteller.getSelectedItem();
            Statement s2 = conn.createStatement();
            String sql2 = "SELECT * FROM Hizmet";
            ResultSet rs2 = s2.executeQuery(sql2);
            while (rs2.next()) {
                if (otelAdi.equals(rs2.getString("oteladi"))) {
                    String hizmet = rs2.getString("hizmetler");
                    if (hizmet == null) {
                        break;
                    }
                    String[] hizmetler = hizmet.split(", ");
                    for (String s1 : hizmetler) {
                        dlm.addElement(s1);
                    }
                    break;
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBoxOtellerActionPerformed

    private void jButtonHizmetEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHizmetEkleActionPerformed
        dlm.addElement(jTextFieldOtelHizmeti.getText());
        String hizmetler = "";
        for (int i = 0; i < dlm.getSize(); i++) {
            hizmetler += dlm.getElementAt(i) + ", ";
        }
        hizmetler = hizmetler.substring(0, hizmetler.length() - 2);

        try {
            String sql = "UPDATE Hizmet SET hizmetler = ? WHERE oteladi = ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, hizmetler);
            st.setString(2, (String) jComboBoxOteller.getSelectedItem());
            st.executeUpdate();
            temizle();
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonHizmetEkleActionPerformed

    private void jTextFieldOtelSehirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOtelSehirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldOtelSehirActionPerformed

    private void jButtonHizmetÇıkarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHizmetÇıkarActionPerformed
        dlm.removeElementAt(jListHizmetler.getSelectedIndex());
        String hizmetler = "";
        for (int i = 0; i < dlm.getSize(); i++) {
            hizmetler += dlm.getElementAt(i) + ", ";
        }
        hizmetler = hizmetler.substring(0, hizmetler.length() - 2);

        try {
            String sql = "UPDATE Hizmet SET Hizmetler = ? WHERE oteladi = ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, hizmetler);
            st.setString(2, (String) jComboBoxOteller.getSelectedItem());
            st.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonHizmetÇıkarActionPerformed

    private void jButtonMusterileriAraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMusterileriAraActionPerformed
        dtm2.setRowCount(0);
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        Query q = em.createQuery("SELECT m FROM Musteri m");
        List<Musteri> musteriler = q.getResultList();
        for (Musteri m : musteriler) {
            if (m.getOtel() != null) {
                dtm2.addRow(new Object[]{m.getAd(), m.getSoyad(), m.getTc(), m.getEmail(), m.getCinsiyet(), m.getTel(), m.getYas(), m.getKullaniciadi(), m.getSifre(), m.getOtel(), m.getOda(), m.getAldigihizmetler(), m.getFatura()});
            }
        }
        em.getTransaction().commit();
        em.close();
        emf.close();
    }//GEN-LAST:event_jButtonMusterileriAraActionPerformed

    private void jButtonKullanıcılarıAraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKullanıcılarıAraActionPerformed
        dtm2.setRowCount(0);
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("SELECT m FROM Musteri m");
        List<Musteri> musteriler = q.getResultList();
        em.getTransaction().begin();
        for (Musteri m : musteriler) {
            if (m.getOtel() == null) {
                dtm2.addRow(new Object[]{m.getAd(), m.getSoyad(), m.getTc(), m.getEmail(), m.getCinsiyet(), m.getTel(), m.getYas(), m.getKullaniciadi(), m.getSifre(), m.getOtel(), m.getOda(), m.getAldigihizmetler(), m.getFatura()});
            }
        }
        em.getTransaction().commit();
        em.close();
        emf.close();
    }//GEN-LAST:event_jButtonKullanıcılarıAraActionPerformed

    private void jComboBoxOtellerMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOtellerMActionPerformed

    }//GEN-LAST:event_jComboBoxOtellerMActionPerformed

    private void jButtonSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSilActionPerformed

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("DELETE FROM Musteri m WHERE m.tc=:mtc");
        q.setParameter("mtc", jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 2));
        em.getTransaction().begin();
        q.executeUpdate();
        em.getTransaction().commit();
        em.close();
        emf.close();
        odayıBosalt((String) jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 9), (Integer) jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 10));

        dtm2.removeRow(jTableMusteriler.getSelectedRow());
    }//GEN-LAST:event_jButtonSilActionPerformed

    private void jButtonGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuncelleActionPerformed
        if(sıkıntıVarMı()){
            return;
        }
        String hizmetler = "";
        int hizmetSayisi = 0;
        for (String s : jListHizmetlerM.getSelectedValuesList()) {
            hizmetler += s + ", ";
            hizmetSayisi++;
        }
        hizmetler = hizmetler.substring(0, hizmetler.length() - 2);

        int fatura = hizmetSayisi * 100 + Integer.parseInt(jTextFieldGeceSayisi.getText()) * 200;

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        Query q = em.createQuery("UPDATE Musteri m SET m.otel=:motel, m.oda=:moda, m.aldigihizmetler=:maldigihizmetler, m.fatura =: mfatura WHERE m.tc=:mtc");
        q.setParameter("motel", (String) jComboBoxOtellerM.getSelectedItem());
        q.setParameter("moda", Integer.parseInt(jTextFieldOdaNoM.getText()));
        q.setParameter("maldigihizmetler", hizmetler);
        q.setParameter("mfatura", fatura);
        q.setParameter("mtc", jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 2));
        q.executeUpdate();
        em.getTransaction().commit();
        em.close();
        emf.close();

        odayıBosalt((String) jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 9), (Integer) jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 10));
        odayiDoldur((String) jComboBoxOtellerM.getSelectedItem(), Integer.parseInt(jTextFieldOdaNoM.getText()), (String) jTableMusteriler.getValueAt(jTableMusteriler.getSelectedRow(), 2));
        temizle();
    }//GEN-LAST:event_jButtonGuncelleActionPerformed

    private boolean sıkıntıVarMı(){
        boolean sıkıntıVarMı = false;
        if(jTextFieldOdaNoM.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Müşterinin oda numarasını belirtiniz!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
            sıkıntıVarMı = true;
        } else if(jDateChooserMusteri.getDate() == null){
            JOptionPane.showMessageDialog(this, "Lütfen tarihi belirtiniz!", "Uayrı!", JOptionPane.WARNING_MESSAGE);
            sıkıntıVarMı = true;
        } else if(jTextFieldGeceSayisi.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Lütfen gece sayısını belirtiniz!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
            sıkıntıVarMı = true;
        }
        return sıkıntıVarMı;
    }
    private void jButtonAraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAraActionPerformed
        dtm2.setRowCount(0);
        dlm2.setSize(0);
        if (jTextFieldTC.getText().isEmpty()) {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
            EntityManager em = emf.createEntityManager();
            Query q = em.createQuery("SELECT m FROM Musteri m");
            List<Musteri> musteriler = q.getResultList();
            em.getTransaction().begin();
            for (Musteri m : musteriler) {
                if (m.getOtel() != null && m.getOtel().equals((String) jComboBoxOtellerM.getSelectedItem())) {
                    dtm2.addRow(new Object[]{m.getAd(), m.getSoyad(), m.getTc(), m.getEmail(), m.getCinsiyet(), m.getTel(), m.getYas(), m.getKullaniciadi(), m.getSifre(), m.getOtel(), m.getOda(), m.getAldigihizmetler(), m.getFatura()});
                }
            }
            em.getTransaction().commit();
            em.close();
            emf.close();
            

            try {
                String otelAdi = (String) jComboBoxOtellerM.getSelectedItem();
                Statement st = conn.createStatement();
                String sql = "SELECT * FROM Hizmet";
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    if (otelAdi.equals(rs.getString("oteladi"))) {
                        String hizmet = rs.getString("hizmetler");
                        String[] hizmetler = hizmet.split(", ");
                        for (String s : hizmetler) {
                            dlm2.addElement(s);
                        }
                        break;
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
            EntityManager em = emf.createEntityManager();
            Query q = em.createQuery("SELECT m FROM Musteri m");
            List<Musteri> musteriler = q.getResultList();
            em.getTransaction().begin();
            for (Musteri m : musteriler) {
                if (m.getTc().equals(jTextFieldTC.getText())) {
                    dtm2.addRow(new Object[]{m.getAd(), m.getSoyad(), m.getTc(), m.getEmail(), m.getCinsiyet(), m.getTel(), m.getYas(), m.getKullaniciadi(), m.getSifre(), m.getOtel(), m.getOda(), m.getAldigihizmetler(), m.getFatura()});
                    em.getTransaction().commit();
                    em.close();
                    emf.close();
                    break;
                }
            }
        }
    }//GEN-LAST:event_jButtonAraActionPerformed

    private void jButtonDosyayaAktarOdalarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDosyayaAktarOdalarActionPerformed
        try {
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM Otel";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                odalariYazdir(rs.getString("ad"));
            }
            temizle();
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonDosyayaAktarOdalarActionPerformed

    private void jButtonDosyayaAktarMusteriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDosyayaAktarMusteriActionPerformed

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("Abdussamet_KACI_1721221007_BP2_Odev2PU");
        EntityManager em = emf.createEntityManager();
        Query q = em.createQuery("SELECT m FROM Musteri m");
        List<Musteri> musteriler = q.getResultList();
        em.getTransaction().begin();
        for (Musteri m : musteriler) {
            if (musteriMi(m)) {
                musteriyiYaz(jTextFieldDosyaAdiM.getText(), (String) jComboBoxDosyaTuruM.getSelectedItem(), m.getAd(), m.getSoyad(), m.getTc(), m.getEmail(), m.getCinsiyet(), m.getTel(), m.getYas(), m.getKullaniciadi(), m.getSifre(), m.getOtel(), m.getOda(), m.getAldigihizmetler(), m.getFatura());
            } else {
                musteriyiYaz(jTextFieldDosyaAdiM.getText(), (String) jComboBoxDosyaTuruM.getSelectedItem(), m.getAd(), m.getSoyad(), m.getTc(), m.getEmail(), m.getCinsiyet(), m.getTel(), m.getYas(), m.getKullaniciadi(), m.getSifre(), " ", 0, " ", 0);

            }
        }
        em.getTransaction().commit();
        em.close();
        emf.close();
        temizle();
    }//GEN-LAST:event_jButtonDosyayaAktarMusteriActionPerformed

    private void jTextFieldDosyaAdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDosyaAdiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDosyaAdiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            ArrayList<Path> dosyalar = new ArrayList();
            Path file = Paths.get("C:\\Users\\Abdussamet\\Documents\\NetBeansProjects\\Abdussamet_KACI_1721221007_BP2_Odev2\\src\\abdussamet_kacı_1721221007_bp2_odev2");
            DirectoryStream<Path> akis=Files.newDirectoryStream(file,"*{.txt,.dat}");
            for (Path dosya : akis) {
                dosyalar.add(dosya.getFileName());
            }
            
            DosyaOkuma d = new DosyaOkuma(dosyalar);
            d.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean musteriMi(Musteri m) {
        boolean musteriMi = false;
        if (m.getOtel() != null) {
            musteriMi = true;
        }
        return musteriMi;
    }
    
    private boolean odaDoluMu(String oteladi, int odano){
        boolean doluMu = false;
        try {
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM Oda";
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                if(oteladi.equals(rs.getString("oteladi")) && odano == rs.getInt("odano")){
                    if(rs.getInt("durum") == 1){
                        doluMu = true;
                    break;
                    }
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return doluMu;
    }

    private void musteriyiYaz(String dosyaAdi, String dosyaturu, String ad, String soyad, String tc, String email, String cinsiyet, String tel, int yas, String kullaniciadi, String sifre, String otel, int oda, String aldigihizmetler, int fatura) {
        String dosya = "C:\\Users\\Abdussamet\\Documents\\NetBeansProjects\\Abdussamet_KACI_1721221007_BP2_Odev2\\src\\abdussamet_kacı_1721221007_bp2_odev2\\";
        dosya = dosya + "\\" + dosyaAdi + dosyaturu;
        if (((String) jComboBoxDosyaTuruM.getSelectedItem()).equals(".dat")) {
            ObjectOutputStream oos = null;

            try {

                oos = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(dosya, true)));
                oos.writeObject(new Musteri(ad, soyad, tc, email, cinsiyet, tel, yas, kullaniciadi, sifre, otel, oda, aldigihizmetler, fatura));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    oos.close();
                } catch (IOException ex) {
                    Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (((String) jComboBoxDosyaTuruM.getSelectedItem()).equals(".txt")) {

            BufferedWriter bw = null;
            try {
                bw = new BufferedWriter(new FileWriter(dosya, true));
                String yazi = "" + ad +  ", " + soyad + ", " + tc + ", " + email + ", " + cinsiyet + ", " + tel + ", " + yas + ", " + kullaniciadi + ", " + sifre + ", " + otel + ", "+ oda +", " + aldigihizmetler + ", " + fatura + "\n";
                bw.write(yazi);
            } catch (IOException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void odalariYazdir(String oteladi) {
        try {
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM Oda";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                if (oteladi.equals(rs.getString("oteladi"))) {
                    odayiyaz(jTextFieldDosyaAdi.getText(), (String) jComboBoxDosyaTuru.getSelectedItem(), rs.getInt("odano"), rs.getString("odatipi"), rs.getInt("durum"), rs.getString("tarih"), rs.getString("oteladi"), rs.getString("musteritc"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void odayiyaz(String dosyaAdi, String dosyaTuru, int odano, String odatipi, int durum, String tarih, String oteladi, String musteritc) {
        String dosya = "C:\\Users\\Abdussamet\\Documents\\NetBeansProjects\\Abdussamet_KACI_1721221007_BP2_Odev2\\src\\abdussamet_kacı_1721221007_bp2_odev2\\";
        dosya = dosya + "\\" + dosyaAdi + dosyaTuru;
        if (((String) jComboBoxDosyaTuru.getSelectedItem()).equals(".dat")) {

            DataOutputStream dos = null;
            try {
                
                dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dosya, true)));
                String yazi = "" + oteladi + ", " + odano + ", " + odatipi + ", " + durum + ", " + tarih + ", " + musteritc + "\n";
                dos.writeUTF(yazi);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    dos.close();
                } catch (IOException ex) {
                    Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (((String) jComboBoxDosyaTuru.getSelectedItem()).equals(".txt")) {

            BufferedWriter bw = null;
            try {
                bw = new BufferedWriter(new FileWriter(dosya, true));
                String yazi = "" + oteladi + ", " + odano + ", " + odatipi + ", " + durum + ", " + tarih + ", " + musteritc + "\n";
                bw.write(yazi);
            } catch (IOException ex) {
                Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }

    private String kullaniciAdi(String musteritc) {
        String kullaniciadi = " ";
        try {
            Statement s = conn.createStatement();
            String sql = "SELECT * FROM Musteri";
            ResultSet rs = s.executeQuery(sql);
            while (rs.next()) {
                if (musteritc != null && musteritc.equals(rs.getString("tc"))) {
                    kullaniciadi = rs.getString("kullaniciadi");
                    break;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
        return kullaniciadi;
    }

    private boolean odaNoVarMi(String oteladi) {
        boolean odaNoVarMi = false;
        try {
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM Oda";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                if (rs.getString("oteladi").equals(oteladi) && rs.getInt("odano") == Integer.parseInt(jTextFieldOdaNo.getText())) {
                    odaNoVarMi = true;
                    break;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
        return odaNoVarMi;
    }

    private void otelEkle(String oteladi, String sehir) {
        try {
            Statement s = conn.createStatement();
            String sql = "INSERT INTO Otel (ad, sehir) VALUES ('" + jTextFieldOtelAd.getText() + "', '" + jTextFieldOtelSehir.getText() + "')";
            s.executeUpdate(sql);

            Statement st = conn.createStatement();
            String sql2 = "INSERT INTO Hizmet (oteladi) VALUES ('" + jTextFieldOtelAd.getText() + "')";
            st.executeUpdate(sql2);
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean otelVarMi(String oteladi) {
        boolean otelVarMi = false;
        try {
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM Otel";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                if (oteladi.equals(rs.getString("ad"))) {
                    otelVarMi = true;
                    break;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
        return otelVarMi;
    }

    private void odaTipiEkle(String odatipi) {
        dcm2.addElement(odatipi);
    }

    private boolean odaTipiVarMi(String odatipi) {
        boolean varMi = false;
        for (int i = 0; i < dcm2.getSize(); i++) {
            if (odatipi.equals(dcm2.getElementAt(i))) {
                varMi = true;
            }
        }
        return varMi;
    }

    private void odayıBosalt(String otel, int odano) {
        try {
            String sql = "UPDATE Oda SET durum = 0, tarih = '', musteritc = '' WHERE oteladi = ? AND odano = ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, otel);
            st.setInt(2, odano);
            st.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    

    private void odayiDoldur(String otel, int odano, String tc) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String date = sdf.format(jDateChooserMusteri.getDate());

        int günInt = Integer.parseInt(date.substring(0, 2)) + Integer.parseInt(jTextFieldGeceSayisi.getText());

        DecimalFormat df = new DecimalFormat("00");

        String gün = df.format(günInt);
        String ay = (String) date.substring(3, 5);
        String yıl = (String) date.substring(6, 10);
        date = date + "/" + gün + "-" + ay + "-" + yıl;

        otel = (String) jComboBoxOtellerM.getSelectedItem();
        odano = Integer.parseInt(jTextFieldOdaNoM.getText());

        try {
            Statement st = conn.createStatement();
            String sql = "UPDATE Oda SET durum = 1, tarih = '" + date + "', musteritc = '" + tc + "' WHERE oteladi = '" + otel + "' AND odano = " + odano + "";
            st.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(YoneticiSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    private void temizle(){
        jTextFieldDosyaAdi.setText("");
        jTextFieldOdaNo.setText("");
        jTextFieldOdaTipi.setText("");
        jTextFieldOtelAd.setText("");
        jTextFieldOtelHizmeti.setText("");
        jTextFieldOtelSehir.setText("");
        jTextFieldDosyaAdiM.setText("");
        jTextFieldGeceSayisi.setText("");
        jTextFieldOdaNoM.setText("");
        jTextFieldTC.setText("");
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YoneticiSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YoneticiSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YoneticiSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YoneticiSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YoneticiSayfasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAra;
    private javax.swing.JButton jButtonDosyayaAktarMusteri;
    private javax.swing.JButton jButtonDosyayaAktarOdalar;
    private javax.swing.JButton jButtonEkle;
    private javax.swing.JButton jButtonGuncelle;
    private javax.swing.JButton jButtonHizmetEkle;
    private javax.swing.JButton jButtonHizmetÇıkar;
    private javax.swing.JButton jButtonKullanıcılarıAra;
    private javax.swing.JButton jButtonMusterileriAra;
    private javax.swing.JButton jButtonSecileniGuncelle;
    private javax.swing.JButton jButtonSecileniSil;
    private javax.swing.JButton jButtonSil;
    private javax.swing.JComboBox<String> jComboBoxDosyaTuru;
    private javax.swing.JComboBox<String> jComboBoxDosyaTuruM;
    private javax.swing.JComboBox<String> jComboBoxOdaTipi;
    private javax.swing.JComboBox<String> jComboBoxOteller;
    private javax.swing.JComboBox<String> jComboBoxOtellerM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListHizmetler;
    private javax.swing.JList<String> jListHizmetlerM;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableMusteriler;
    private javax.swing.JTable jTableOdalar;
    private javax.swing.JTextField jTextFieldDosyaAdi;
    private javax.swing.JTextField jTextFieldDosyaAdiM;
    private javax.swing.JTextField jTextFieldGeceSayisi;
    private javax.swing.JTextField jTextFieldOdaNo;
    private javax.swing.JTextField jTextFieldOdaNoM;
    private javax.swing.JTextField jTextFieldOdaTipi;
    private javax.swing.JTextField jTextFieldOtelAd;
    private javax.swing.JTextField jTextFieldOtelHizmeti;
    private javax.swing.JTextField jTextFieldOtelSehir;
    private javax.swing.JTextField jTextFieldTC;
    // End of variables declaration//GEN-END:variables
}
